#!/usr/bin/env bash
set -eo pipefail

: "${CACHE_DIR:="$HOME/.cache/frece/"}"

[[ -d $CACHE_DIR ]] || mkdir -p "$CACHE_DIR"
CACHE="$CACHE_DIR"/hamster.db

# To enable mocking in test
: "${_ROFI:=rofi}"
: "${_HAMSTER:=hamster}"
: "${_DUNSTIFY:=dunstify}"
: "${_XSV:=xsv}"
: "${_FRECE:=frece}"
: "${_TESTING:="no"}"


function activities() {
   # Echo a reverse list of activities prefixed by date
   # Activities follow the hamster start command format
   # start=$1
   # end=$2
   if [[ $# -eq 0 ]]
   then
      start=$(date +%Y-%m-%d -d "2 years ago")
      end=$(date +%Y-%m-%d)
      shift
   else 
      start="$1"
      end="$2"
   fi
   LC_ALL=C "$_HAMSTER" export tsv "$start" "$end" |
      "$_XSV" select -d"\t" "activity,category,description,tags" |
      tail -n +2 | # remove header line
      # change 
         #  gestion projet,c845,planning desc,145
         #  gestion projet,c845,planning desc,"145, 246"
      # into hamster start command
         #  gestion projet@c845,, planning desc #145
         #  gestion projet@c845,, planning desc #145 #246
      sed --regexp-extended -e '/^[^"]*",?$/d' | #remove buggy lines like 'comment",'
	 # separate activity and category with @
	 # For line containing multiple tags and thus ending with ", add # before
	 # tags remove coma and double quotes
	 # For line with single tag add # before the tag
	 # Replace last coma with space
	 # double comma to separate comment 
      sed --regexp-extended  -e 's/,/@/'  -e '/"$/s/"/#/' -e '/"$/s/, / #/g' \
         -e 's/"$//' -e '/,[^#]+$/s/,([^,]+)$/,#\1/' -e 's/,*([^,]*)$/ \1/' -e 's/,/,, /' |
      LC_ALL=C sort -u
}

function all_activities() {
if [[ ! -e $CACHE ]] 
then
   frece init "$CACHE" <(activities "$(date +%Y-%m-%d -d "1 month ago")" "$(date +%Y-%m-%d)")
   frece print "$CACHE"
else
   frece print "$CACHE"
   frece update "$CACHE" <(activities "$(date +%Y-%m-%d -d "3 month ago")" "$(date +%Y-%m-%d)") --purge-old &
fi
}

# To enable mocking in test
: "${_all_activities:=all_activities}"

function main() {
   current=$("$_HAMSTER" current | sed 's|^[^ ]\+ [^ ]\+ \(.*\) [^ ]\+$|\1|' )
   selectedfilter=$("$_all_activities"  \
      | "$_ROFI" -dmenu -i -select "$current" -p "Select task" -format "s|f")

   selected=${selectedfilter/\|*/}
   filter=${selectedfilter/*\|/}
   [ -z "$selected" ] && exit

   # if selected activity matches current we stop it
   if [[ "${selected} " =~ $current\  ]]; then
      "$_HAMSTER" stop
      "$_DUNSTIFY" -a "hamster" "Stop activity ${selected/,,/}"
   else
      if [[ $filter =~ ^[A-Za-z].*[0-9-]$ ]] 
      then
	 # Filter ends with time or duration â†’ we keep filter
	 action="$filter"
	 item="$(echo "$action" | sed --regexp-extended -e 's/ *,+[^,]*//')"
	 if ! "$_FRECE" increment "$CACHE" "$item" 
	 then
	    ("$_FRECE" add "$CACHE" "$item" 
	    "$_FRECE" increment "$CACHE" "$item" )&
	 fi
      else
	 action="$selected"
	 if ! "$_FRECE" increment "$CACHE" "$action"
	 then
	    ("$_FRECE" add "$CACHE" "$action" 
	    "$_FRECE" increment "$CACHE" "$action" )&
	 fi
      fi
      echo "$action"
      "$_HAMSTER" start "$action"
      "$_DUNSTIFY" -a "hamster" "Start activity ${action/,,/}"
   fi
}

if [[ "$_TESTING" == "no" ]]
then
    main
fi
